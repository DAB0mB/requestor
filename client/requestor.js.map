{
  "version": 3,
  "sources": [
    "../../../../usr/local/lib/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "lib/collection-requestor.js",
    "lib/index.js",
    "lib/model-requestor.js",
    "lib/requestor.js",
    "lib/utils.js"
  ],
  "names": [],
  "mappingszGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "var Requestor = require(\"./requestor\");\nvar Utils = require(\"./utils\");\n\nfunction CollectionRequestor() {\n  var dependencyIds, ids;\n\n  if (!(this instanceof CollectionRequestor))\n    return CollectionRequestor.inherit.apply(CollectionRequestor, arguments);\n\n  if (this.dependency) {\n    dependencyIds = arguments[0];\n    ids = arguments[1];    \n  }\n  else {\n    ids = arguments[0];\n  }\n\n  this.models = ids.map(function(id) {\n    id = id instanceof Requestor ? id.id : id;\n    return new this.model(dependencyIds, id);\n  }, this);\n\n  var buildModel = new this.model(dependencyIds);\n  this.urlRoot = buildModel.urlRoot;\n  this.url = buildModel.url;\n}\n\nCollectionRequestor.prototype = Object.create(Requestor.prototype);\nCollectionRequestor.prototype.constructor = CollectionRequestor;\n\nCollectionRequestor.prototype.create = function(docsNum, attrs) {\n  var that = this;\n  var models = [];\n\n  var promises = Utils.array(docsNum).map(function(i) {\n    var model = new this.model(this.server, this.dependencyIds);\n    models.push(model);\n    return model.create(attrs);\n  }, this);\n\n  return Promise.all(promises).then(function(results) {\n    that.models = models;\n    return Promise.resolve(results);\n  });\n};\n\nCollectionRequestor.prototype.destroy = function() {\n  var that = this;\n\n  var promises = this.models.forEach(function(model) {\n    return model.destroy();\n  });\n\n  return Promise.all(promises).then(function(results) {\n    delete that.models;\n    return Promise.resolve(results);\n  });\n};\n\nCollectionRequestor.prototype._defaultRequests = {\n  fetchAll: \"GET .  \",\n  fetch:    \"GET */.\",\n  update:   \"PUT */.\"\n};\n\nCollectionRequestor.prototype._getRequestsManifest = function() {\n  var rawModelRequests = this.model.prototype.requests;\n\n  var modelRequests = Object.keys(rawModelRequests).reduce(function(modelRequests, action) {\n    var path = rawModelRequests[action];\n    modelRequests[action] = \"*/\" + path;\n    return modelRequests;\n  }, {});\n\n  return Utils.weld(\n    modelRequests,\n    this._defaultRequests,\n    this.requests\n  );\n};\n\nCollectionRequestor.prototype._createRequest = function(action, method, suburl) {\n  return function(data) {\n    if (suburl[0] != \"*\")\n      return this._createRequestPromise(action, method, suburl, data);\n\n    var promises = this.models.map(function(model) {\n      return model[action](data);\n    });\n\n    return Promise.all(promises);\n  };\n};\n\nCollectionRequestor.prototype._composeUrl = function(suburl, navchar) {\n  switch (navchar) {\n    case \"~\": return suburl.replace(navchar, this.urlRoot);\n    case \".\": return suburl.replace(navchar, this.url);\n  }\n};\n\nCollectionRequestor.inherit = function(name, proto) {\n  return Requestor.inherit(CollectionRequestor, name, proto);\n};\n\nmodule.exports = CollectionRequestor;",
    "var Requestor = require(\"./requestor\");\nvar ModelRequestor = require(\"./model-requestor\");\nvar CollectionRequestor = require(\"./collection-requestor\");\n\nRequestor.Model = ModelRequestor;\nRequestor.Collection = CollectionRequestor;\n\nmodule.exports = Requestor;",
    "var Requestor = require(\"./requestor\");\nvar Utils = require(\"./utils\");\n\nfunction ModelRequestor() {\n  var dependencyIds, id;\n\n  if (!(this instanceof ModelRequestor))\n    return ModelRequestor.inherit.apply(ModelRequestor, arguments);\n\n  if (this.dependency || arguments.length == 2) {\n    dependencyIds = arguments[0];\n    id = arguments[1];\n  }\n  else {\n    id = arguments[0];\n  }\n\n  this.id = id;\n  \n  if (dependencyIds && dependencyIds.length) {\n    var baseDependencyIds = dependencyIds.slice();\n    var baseId = baseDependencyIds.pop();\n    var base = new this.dependency(baseDependencyIds);\n    this.urlRoot = base.url + \"/\" + baseId;\n  }\n\n  this.url = this.urlRoot + \"/\" + this.entity;\n}\n\nModelRequestor.prototype = Object.create(Requestor.prototype);\nModelRequestor.prototype.constructor = ModelRequestor;\nModelRequestor.prototype.idAttr = \"_id\";\n\nModelRequestor.prototype.save = function(attrs) {\n  if (this.id)\n    this.update(attrs);\n  else\n    this.create(attrs);\n};\n\nModelRequestor.prototype.onCreateRequest = function(result) {\n  this.id = result[this.idAttr];\n};\n\nModelRequestor.prototype.onDestroyRequest = function() {\n  delete this.id;\n};\n\nModelRequestor.prototype._defaultRequests = {\n  create:  \"POST   ..\",\n  fetch:   \"GET    . \",\n  update:  \"PUT    . \",\n  destroy: \"DELETE . \"\n};\n\nModelRequestor.prototype._getRequestsManifest = function() {\n  return Utils.weld(this._defaultRequests, this.requests);\n};\n\nModelRequestor.prototype._createRequest = function(action, method, suburl) {\n  return function(data) {\n    return this._createRequestPromise(action, method, suburl, data);\n  };\n};\n\nModelRequestor.prototype._composeUrl = function(suburl, navchar) {\n  switch (navchar) {\n    case \"~\": return suburl.replace(navchar, this.urlRoot);\n    case \"..\": return suburl.replace(navchar, this.url);\n    case \".\": return suburl.replace(navchar, this.url + \"/\" + this.id);\n  }\n};\n\nModelRequestor.inherit = function(name, proto) {\n  return Requestor.inherit(ModelRequestor, name, proto);\n};\n\nmodule.exports = ModelRequestor;",
    "var Boom = (typeof window !== \"undefined\" ? window['Boom'] : typeof global !== \"undefined\" ? global['Boom'] : null);\nvar Promise = (typeof window !== \"undefined\" ? window['Promise'] : typeof global !== \"undefined\" ? global['Promise'] : null);\nvar Request = (typeof window !== \"undefined\" ? window['Request'] : typeof global !== \"undefined\" ? global['Request'] : null);\nvar Utils = require(\"./utils\");\n\nfunction Requestor(dependencyIds) {}\n\nRequestor.prototype._initRequests = function(requests) {\n  Object.keys(requests).forEach(function(action) {\n    var path = requests[action];\n    var pathSplit = path.split(/\\s+/);\n    var method = pathSplit[0];\n    var suburl = pathSplit[1];\n    this[action] = this[action] || this._createRequest(action, method, suburl);\n  }, this);\n};\n\nRequestor.prototype._createRequestPromise = function(action, method, suburl, data) {\n  var that = this;\n  var navchar = suburl.split(\"/\")[0];\n  var name = Utils.capitalize(action);\n  var onInject = (this[\"on\" + name + \"Request\"] || Utils.identity()).bind(this);\n  var parseData = (this[\"parse\" + name + \"Data\"] || Utils.identity()).bind(this);\n  data = parseData(data);\n\n  return new Promise(function(resolve, reject) {\n    var url = that._composeUrl(suburl, navchar);\n    var response = that._createResponse(resolve, reject, onInject);\n    that.request(method, url, data, response);\n  });\n};\n\nRequestor.prototype._createResponse = function(resolve, reject, onInject) {\n  return function(err, result) {\n    if (err) return reject(err);\n    onInject(result);\n    resolve(result);\n  };\n};\n\nRequestor.prototype.request = function() {\n  var requestHandler;\n\n  try {\n    requestHandler = window && this._clientRequest;\n  }\n  catch (dummy) {\n    requestHandler = this._serverRequest;\n  }\n\n  requestHandler.apply(this, arguments);\n};\n\nRequestor.prototype._clientRequest = function(method, url, data, callback) {\n  $.ajax({\n    method: method,\n    url: url,\n    data: data,\n    dataType: \"json\",\n    success: function(result) {\n      callback(null, result);\n    },\n    error: function(xhr) {\n      var err = Error(xhr.responseText);\n      callback(err);\n    }\n  });\n};\n\nRequestor.prototype._serverRequest = function(method, url, data, callback) {\n  var qs, body;\n\n  if (method == \"get\")\n    qs = data;\n  else\n    body = data;\n\n  var config = {\n    method: method,\n    url: url,\n    qs: qs,\n    body: body,\n    json: true\n  };\n\n  Request(config, function(err, response, body) {\n    if (err) return callback(err);\n    var statusCode = response.statusCode;\n\n    if (statusCode != 200)\n      err = Boom.create(statusCode);\n\n    callback(err, body);\n  });\n};\n\nRequestor.defineRequestMethod = function(method) {\n  Requestor.prototype.request = method;\n};\n\nRequestor.inherit = function(EntityRequestor, name, proto) {\n  var NewRequestor = Utils.nameFn(name, function() {\n    EntityRequestor.apply(this, arguments);\n  });\n\n  var newProto = Object.create(EntityRequestor.prototype);\n  NewRequestor.prototype = newProto;\n  Utils.extend(newProto, proto);\n\n  newProto.constructor = NewRequestor;\n  newProto.requests = newProto.requests || {};\n\n  var requests = newProto._getRequestsManifest();\n  newProto._initRequests(requests);\n\n  return NewRequestor;\n};\n\nmodule.exports = Requestor;",
    "var array = function(length) {\n  return Array.apply(null, {length: length});\n};\n\nvar toArray = function(obj) {\n  return [].slice.call(obj);\n};\n\nvar capitalize = function(str) {\n  return str.substr(0, 1).toUpperCase() + str.substr(1);\n};\n\nvar identity = function(result) {\n  return function() {\n    return result;\n  };\n};\n\nvar weld = function() {\n  var objs = [{}].concat(toArray(arguments));\n  return extend.apply(null, objs);\n};\n\nvar extend = function(obj) {\n  var extensions = toArray(arguments).slice(1);\n\n  extensions.forEach(function(extension) {\n    Object.keys(extension).forEach(function(k) {\n      var v = extension[k];\n      obj[k] = v;\n    });\n  });\n\n  return obj;\n};\n\nvar nameFn = function(name, fn) {\n  return eval('(function ' + name + '() {return fn.apply(this, arguments);})');\n};\n\nmodule.exports = {\n  array: array,\n  toArray: toArray,\n  capitalize: capitalize,\n  identity: identity,\n  weld: weld,\n  extend: extend,\n  nameFn: nameFn\n};"
  ]
}